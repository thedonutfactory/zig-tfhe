name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-release:
    name: Build Release (${{ matrix.os }})
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: zig-tfhe-linux-x86_64
          - os: macos-latest
            artifact_name: zig-tfhe-macos-arm64
          - os: windows-latest
            artifact_name: zig-tfhe-windows-x86_64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Build release
        run: zig build -Doptimize=ReleaseFast

      - name: Create archive (Unix)
        if: runner.os != 'Windows'
        run: |
          mkdir -p release
          cp -r src release/
          cp LICENSE README.md release/
          tar czf ${{ matrix.artifact_name }}.tar.gz release/

      - name: Create archive (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir release
          xcopy /E /I src release\src
          copy LICENSE release\
          copy README.md release\
          tar -czf ${{ matrix.artifact_name }}.tar.gz release\

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.artifact_name }}.tar.gz
          asset_name: ${{ matrix.artifact_name }}.tar.gz
          asset_content_type: application/gzip

